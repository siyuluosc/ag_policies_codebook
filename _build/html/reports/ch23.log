Traceback (most recent call last):
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import Select
from time import sleep
import pandas as pd
import datefinder
import calendar
import os
import unittest
from random import randint
import PyPDF2
import glob
import time
import json
import re
import fitz
import math

#driver_path = 'I:\Projects\AFRI/chromedriver.exe' #for windows
driver_path = '/Users/long/Library/CloudStorage/OneDrive-Personal/Projects/AFRI/chromedriver'
# driver = webdriver.Chrome(executable_path=DRIVER_PATH)

# Change the working directory
#os.chdir('/Users/long/OneDrive/Projects/AFRI')
os.chdir('/Users/long/OneDrive/Projects/AFRI/data/LA/')
# os.chdir('/Volumes/GoogleDrive/Shared drives/UCSC-UMN AFRI project/Data/GA')
# Get the current working directory
cwd = os.getcwd()
# Print the current working directory
print("Current working directory: {0}".format(cwd))

chromeOptions = webdriver.ChromeOptions()
chromeOptions.add_experimental_option('prefs', {
    "download.default_directory": '/Users/long/Library/CloudStorage/OneDrive-Personal/Projects/AFRI/data/LA/',
    #Change default directory for downloads
    "download.prompt_for_download": False,  #To auto download the file
    "download.directory_upgrade": True,
    "plugins.always_open_pdf_externally": True  #It will not show PDF directly in chrome
})

driver = webdriver.Chrome(executable_path=driver_path, options=chromeOptions)

driver.get('https://www.legis.la.gov/Legis/SessionInfo/SessionInfo.aspx')

session_links = driver.find_elements_by_partial_link_text("Session")
acts = []
years = ['97RS', '971ES', '972ES', '973ES', '98RS', '981ES', '982ES', '983ES', '99RS', '991ES', '992ES', '993ES',
         '00RS', '001ES', '002ES', '003ES', '01RS', '011ES', '012ES', '013ES', '02RS', '021ES', '022ES', '023ES',
         '03RS', '031ES', '032ES', '033ES', '04RS', '041ES', '042ES', '043ES', '05RS', '051ES', '052ES', '053ES',
         '06RS', '061ES', '062ES', '063ES', '07RS', '071ES', '072ES', '073ES', '08RS', '081ES', '082ES', '083ES',
         '09RS', '091ES', '092ES', '093ES', '10RS', '101ES', '102ES', '103ES', '11RS', '111ES', '112ES', '113ES',
         '12RS', '121ES', '122ES', '123ES', '13RS', '131ES', '132ES', '133ES', '14RS', '141ES', '142ES', '143ES',
         '15RS', '151ES', '152ES', '153ES', '16RS', '161ES', '162ES', '163ES', '17RS', '171ES', '172ES', '173ES',
         '18RS', '181ES', '182ES', '183ES', '19RS', '191ES', '192ES', '193ES', '20RS', '201ES', '202ES', '203ES',
         '21RS', '211ES', '212ES', '213ES', '22RS', '221ES', '222ES', '223ES']

for year in years[2:]:
    yearurl = 'https://www.legis.la.gov/Legis/ActNumbers.aspx?sid=' + year
    try:
        driver.get(yearurl)
        total =
        driver.find_element_by_css_selector("#ctl00_ctl00_PageBody_PageContent_LabelTotalInstruments").text.split(
            " Instruments")[0].split("are ")[1]
        total_num = math.ceil(int(total) / 100)
        for i in range(0, total_num + 1):
            try:
                for i in range(0, 100):
                    driver.get(yearurl)
                    element = '#ctl00_ctl00_PageBody_PageContent_ListViewActs_ctrl' + str(i) + '_HyperLink1'
                    driver.find_element_by_css_selector(element).click()
                    url = driver.current_url
                    actpdf_url = "https://www.legis.la.gov/Legis/BillDocs.aspx?i=" + str(url).split("i=")[1] + "&t=text"
                    driver.get(actpdf_url)
                    driver.find_element_by_css_selector(
                        "#formBillDocs > table > tbody > tr:nth-child(1) > td > a").click()
                pages = driver.find_elements_by_css_selector("#ctl00_ctl00_PageBody_PageContent_DataPager1 > a")
                nextpage = "#ctl00_ctl00_PageBody_PageContent_DataPager1 > a:nth-child(" + str(len(pages)) + ")"
                driver.find_element_by_css_selector(nextpage).click()
            except:
                print("skip")
    except:
        print("skip")
badfiles = []
acttxts = []
path = "/Users/long/Webscriping/AFRI/data/LA"

files = glob.glob(os.path.join(path, '*.pdf'))

for file in files:
    try:
        doc = fitz.open(file)
        pgtxts = []
        for page in doc:
            pgtxt = page.get_text()
            pgtxts.append(pgtxt)
            acttxt = ' '.join(pgtxts)
        acttxts.append(acttxt)
        doc.close()
    except:
        print(file)
        badfiles.append(file)

datasource = pd.DataFrame({
    'Full text': acttxts
})

datasource.drop_duplicates(subset=['Full text'],
                           keep='first', inplace=True, ignore_index=True)

datasource.to_excel('LA_Leginfo.xlsx')
datasource.to_csv('LA_Leginfo.csv')
datasource.to_pickle('LA_Leginfo.pkl')
datasource.to_json('LA_Leginfo.json')

datasource = pd.DataFrame({
    'Bad files': badfiles
})

datasource.drop_duplicates(subset=['Bad files'],
                           keep='first', inplace=True, ignore_index=True)

datasource.to_excel('LA_Leginfo_check.xlsx')
datasource.to_csv('LA_Leginfo_check.csv')
datasource.to_pickle('LA_Leginfo_check.pkl')
datasource.to_json('LA_Leginfo_check.json')

------------------

[0;36m  Input [0;32mIn [1][0;36m[0m
[0;31m    total =[0m
[0m           ^[0m
[0;31mSyntaxError[0m[0;31m:[0m invalid syntax

SyntaxError: invalid syntax (1383085814.py, line 63)

