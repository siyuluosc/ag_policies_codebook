Traceback (most recent call last):
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# import libraries
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import Select
from time import sleep
import pandas as pd
import calendar
import os
import unittest
from random import randint
import PyPDF2
import glob
import time
import json
import fitz

# driver_path = 'I:\Projects\AFRI/chromedriver.exe' #for windows
driver_path = '/Users/long/OneDrive/Projects/AFRI/chromedriver'
# driver = webdriver.Chrome(executable_path=DRIVER_PATH)

# Change the working directory
os.chdir('/Users/long/Downloads/MS')
#os.chdir('I:\Projects/AFRI')
# os.chdir('/Volumes/GoogleDrive/Shared drives/UCSC-UMN AFRI project/Data/GA')
# Get the current working directory
cwd = os.getcwd()
# Print the current working directory
print("Current working directory: {0}".format(cwd))

chromeOptions = webdriver.ChromeOptions()
# for mac
#dnldpath = {"download.default_directory" : "/Users/long/OneDrive/Projects/AFRI/data/SD/"}
# for windows
dnldpath = {"download.default_directory": "/Users/long/OneDrive/Projects/AFRI/data/MS"}
chromeOptions.add_experimental_option("prefs", dnldpath)
chromeOptions.add_argument('--no-sandbox')
chromeOptions.add_argument('--disable-dev-shm-usage')
driver = webdriver.Chrome(executable_path=driver_path, options=chromeOptions)

urls = []
acts = []

#Mississippi Legislature 1997 Regular Session

driver.get("http://billstatus.ls.state.ms.us/1997/all_measures/allmsrs.htm")

acts = driver.find_elements_by_partial_link_text("Approved")
for act in acts:
    url = act.get_attribute('href')
    urls.append(url)

#Mississippi Legislature 1998 Regular Session

driver.get("http://billstatus.ls.state.ms.us/1998/all_measures/allmsrs.htm")

acts = driver.find_elements_by_partial_link_text("Approved")
for act in acts:
    url = act.get_attribute('href')
    urls.append(url)

#Mississippi Legislature 1999- Regular Session
for year in range(1999, 2008):
    session_url = "http://billstatus.ls.state.ms.us/" + str(year) + "/pdf/all_measures/notdead.htm"
    print(session_url)
    driver.get(session_url)
    acts = driver.find_elements_by_partial_link_text("Approved")
    for act in acts:
        url = act.get_attribute('href')
        urls.append(url)
    for e in ["1e", "2e", "3e", "4e"]:
        session_url = "http://billstatus.ls.state.ms.us/" + str(year) + e + "/pdf/all_measures/notdead.htm"
        print(session_url)
        driver.get(session_url)
        try:
            acts = driver.find_elements_by_partial_link_text("Approved")
            for act in acts:
                url = act.get_attribute('href')
                urls.append(url)
        except:
            print("No this session")
#Mississippi Legislature 1999- Regular Session

urls2 = []
for year in range(2009, 2023):
    session_url = "http://billstatus.ls.state.ms.us/" + str(year) + "/pdf/all_measures/notdead.xml"
    print(session_url)
    driver.get(session_url)
    acts = driver.find_elements_by_partial_link_text("Approved")
    for act in acts:
        url = act.get_attribute('href')
        urls2.append(url)
    for e in ["1e", "2e", "3e", "4e"]:
        session_url = "http://billstatus.ls.state.ms.us/" + str(year) + e + "/pdf/all_measures/notdead.xml"
        print(session_url)
        driver.get(session_url)
        try:
            acts = driver.find_elements_by_partial_link_text("Approved")
            for act in acts:
                url = act.get_attribute('href')
                urls2.append(url)
        except:
            print("No this session")

acttxts = []

for i, url in enumerate(urls[1350:]):
    try:
        driver.get(url)
        print(i)
        WebDriverWait(driver, 300).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, "body"))
        )
        acturl = driver.find_element_by_partial_link_text("Sent to Governor").get_attribute('href')
        print(acturl)
        try:
            driver.get(acturl)
            if "pdf" in acturl:
                print("pdf")
            else:
                acttxt = driver.find_element_by_css_selector("html").text
                acttxts.append(acttxt)
        except:
            print("check")
    except:
        print("check")

for i, url in enumerate(urls2):
    try:
        driver.get(url)
        print(i)
        WebDriverWait(driver, 300).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, "body"))
        )
        acturl = driver.find_element_by_partial_link_text("Sent to Governor").get_attribute('href')
        print(acturl)
        try:
            driver.get(acturl)
            if "pdf" in acturl:
                print("pdf")
            else:
                acttxt = driver.find_element_by_css_selector("html").text
                acttxts.append(acttxt)
        except:
            print("check")
    except:
        print("check")

path = "/Users/long/Downloads/MS"
files = glob.glob(os.path.join(path, '*.pdf'))
for file in files:
    try:
        doc = fitz.open(file)
        pgtxts = []
        for page in doc:
            pgtxt = page.get_text()
            pgtxts.append(pgtxt)
            acttxt = ' '.join(pgtxts)
        acttxts.append(acttxt)
        doc.close()
    except:
        print(file)

datasource = pd.DataFrame({
    'Full text': acttxts
})
# save bill info into files
datasource.to_excel('MS_Leginfo.xlsx')
datasource.to_csv('MS_Leginfo.csv')
datasource.to_pickle('MS_Leginfo.pkl')
datasource.to_json('MS_Leginfo.json')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
Input [0;32mIn [1][0m, in [0;36m<cell line: 24>[0;34m()[0m
[1;32m     20[0m driver_path [38;5;241m=[39m [38;5;124m'[39m[38;5;124m/Users/long/OneDrive/Projects/AFRI/chromedriver[39m[38;5;124m'[39m
[1;32m     21[0m [38;5;66;03m# driver = webdriver.Chrome(executable_path=DRIVER_PATH)[39;00m
[1;32m     22[0m 
[1;32m     23[0m [38;5;66;03m# Change the working directory[39;00m
[0;32m---> 24[0m [43mos[49m[38;5;241;43m.[39;49m[43mchdir[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43m/Users/long/Downloads/MS[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m     25[0m [38;5;66;03m#os.chdir('I:\Projects/AFRI')[39;00m
[1;32m     26[0m [38;5;66;03m# os.chdir('/Volumes/GoogleDrive/Shared drives/UCSC-UMN AFRI project/Data/GA')[39;00m
[1;32m     27[0m [38;5;66;03m# Get the current working directory[39;00m
[1;32m     28[0m cwd [38;5;241m=[39m os[38;5;241m.[39mgetcwd()

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '/Users/long/Downloads/MS'
FileNotFoundError: [Errno 2] No such file or directory: '/Users/long/Downloads/MS'

