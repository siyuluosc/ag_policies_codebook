Traceback (most recent call last):
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/long/opt/anaconda3/envs/py39/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# import libraries
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import Select
from time import sleep
import pandas as pd
import datefinder
import calendar
from datetime import datetime
from dateutil.parser import parse

# driver_path = 'C:/Program Files (x86)/Google/Chrome/Application/chromedriver.exe' #for windows
# driver = webdriver.Chrome(executable_path=driver_path)

# set up webdriver by short path
driver = webdriver.Chrome('./chromedriver')

# choose sessionyears
input_sessionyears = ['2021-2022', '2019-2020', '2017-2018', '2015-2016', '2013-2014', '2011-2012', '2009-2010',
                      '2007-2008', '2005-2006', '2003-2004', '2001-2002', '1999-2000', '1997-1998']

urls = []

for input_sessionyear in input_sessionyears:
    driver.get("https://www.legislature.mi.gov/(S(uycj0anii1cfudf2mj0uyllp))/mileg.aspx?page=LegAdvancedSearch")

    select_public = driver.find_element_by_css_selector('#frg_legadvancedsearch_PublicActs')
    select_public.click()

    # select session year
    select_sessionyear = Select(
        driver.find_element_by_css_selector('#frg_legadvancedsearch_LegislativeSession_LegislativeSession'))
    select_sessionyear.select_by_visible_text(input_sessionyear)

    # search by keywords
    #input_keywords = driver.find_element_by_css_selector('#frg_legadvancedsearch_LegFullText')
    #input_keywords.send_keys(keyword)

    # click search button
    search_button = driver.find_element_by_css_selector('#frg_legadvancedsearch_SearchButton')
    search_button.click()

    WebDriverWait(driver, 300).until(
        EC.presence_of_element_located(
            (By.CSS_SELECTOR, "#maincontent > table:nth-child(2) > tbody > tr:nth-child(1) > td > span"))
    )

    try:
        searchresult = driver.find_elements_by_css_selector(
            'table#frg_executesearch_SearchResults_Results  tbody  tr td a')
    except:
        continue
    sleep(3)

    for i in range(len(searchresult)):
        url = searchresult[i].get_attribute('href')
        urls.append(url)

print("done with urls")

# set up list titles
years = []
states = []
sessionyears = []
billnumbers = []
names = []
briefsummarys = []
introduceddates = []
signingdates = []
effectivedates = []
expirationdates = []
leadauthors = []
textlinks = []
acttxts = []

for url in urls:

    driver.get(url)

    textlink = driver.find_element_by_css_selector("#frg_print_HtmlDocIcon_DocumentImage").get_attribute('href')
    textlinks.append(textlink)

    state = "MI"
    states.append(state)

    year = driver.find_element_by_css_selector('#frg_print_DocumentName').text.split(" of ")[1]
    years.append(year)

    if (int(year) % 2) == 0:
        sessionyear = str(int(year) - 1) + "-" + str(year)
    else:
        sessionyear = str(year) + str("-") + str(int(year) + 1)
    sessionyears.append(sessionyear)

    briefsummary = driver.find_element_by_css_selector('#frg_print_DocumentDescription').text
    briefsummarys.append(briefsummary)

    text = driver.find_element_by_css_selector('#frg_print_HtmlDocIcon_DocumentImage > img')
    text.click()

    #try:
    #    billnumber = driver.find_element_by_xpath("//font[contains(text(),'SENATE BILL No.')]").text.split("No. ")[1]
    #    billnumber = "SB-" + str(billnumber)
    #except:
    #    billnumber = driver.find_element_by_xpath("//font[contains(text(),'HOUSE BILL No.')]").text.split("No. ")[1]
    #    billnumber = "HB-" + str(billnumber)
    #billnumbers.append(billnumber)

    #name = driver.find_element_by_xpath("//font[contains(text(),'AN ACT to')]").text
    #names.append(name)

    #leadauthor = driver.find_element_by_xpath("//font[contains(text(),'Introduced by')]").text.split("Introduced by ")[1]
    #leadauthors.append(leadauthor)

    #signingdate = driver.find_element_by_css_selector('body').text.split('Approved by the Governor')[1].split('Filed with the Secretary of State')[0]
    #dates = datefinder.find_dates(signingdate)
    #datelist = []
    #for date in dates:
    #    signingdate = date.date()
    #signingdates.append(signingdate)

    acttxt = driver.find_element_by_css_selector("body").text
    acttxts.append(acttxt)
    sleep(randint(1, 2))
datasource = pd.DataFrame({
    'Year': years,
    'State': states,
    'Session Year': sessionyears,
    'Brief Summary': briefsummarys,
    'Link to full text': textlinks,
    'Full text': acttxts
})

# save bill info into excel file
datasource.to_excel('MI_Leginfo.xlsx')
datasource.to_csv('MI_Leginfo.csv')
from sqlalchemy import create_engine

engine = create_engine('sqlite://', echo=False)
datasource.to_sql('MI_Leginfo.sql', con=engine)
datasource.to_pickle('MI_Leginfo.pkl')
datasource.to_json('MI_Leginfo.json')

datasource.to_stata('MI_Leginfo.dta')

print("download finished")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
File [0;32m~/opt/anaconda3/envs/py39/lib/python3.9/site-packages/selenium/webdriver/common/service.py:72[0m, in [0;36mService.start[0;34m(self)[0m
[1;32m     71[0m     cmd[38;5;241m.[39mextend([38;5;28mself[39m[38;5;241m.[39mcommand_line_args())
[0;32m---> 72[0m     [38;5;28mself[39m[38;5;241m.[39mprocess [38;5;241m=[39m [43msubprocess[49m[38;5;241;43m.[39;49m[43mPopen[49m[43m([49m[43mcmd[49m[43m,[49m[43m [49m[43menv[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43menv[49m[43m,[49m
[1;32m     73[0m [43m                                    [49m[43mclose_fds[49m[38;5;241;43m=[39;49m[43mplatform[49m[38;5;241;43m.[39;49m[43msystem[49m[43m([49m[43m)[49m[43m [49m[38;5;241;43m!=[39;49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mWindows[39;49m[38;5;124;43m'[39;49m[43m,[49m
[1;32m     74[0m [43m                                    [49m[43mstdout[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mlog_file[49m[43m,[49m
[1;32m     75[0m [43m                                    [49m[43mstderr[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mlog_file[49m[43m,[49m
[1;32m     76[0m [43m                                    [49m[43mstdin[49m[38;5;241;43m=[39;49m[43mPIPE[49m[43m)[49m
[1;32m     77[0m [38;5;28;01mexcept[39;00m [38;5;167;01mTypeError[39;00m:

File [0;32m~/opt/anaconda3/envs/py39/lib/python3.9/subprocess.py:951[0m, in [0;36mPopen.__init__[0;34m(self, args, bufsize, executable, stdin, stdout, stderr, preexec_fn, close_fds, shell, cwd, env, universal_newlines, startupinfo, creationflags, restore_signals, start_new_session, pass_fds, user, group, extra_groups, encoding, errors, text, umask)[0m
[1;32m    948[0m             [38;5;28mself[39m[38;5;241m.[39mstderr [38;5;241m=[39m io[38;5;241m.[39mTextIOWrapper([38;5;28mself[39m[38;5;241m.[39mstderr,
[1;32m    949[0m                     encoding[38;5;241m=[39mencoding, errors[38;5;241m=[39merrors)
[0;32m--> 951[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_execute_child[49m[43m([49m[43margs[49m[43m,[49m[43m [49m[43mexecutable[49m[43m,[49m[43m [49m[43mpreexec_fn[49m[43m,[49m[43m [49m[43mclose_fds[49m[43m,[49m
[1;32m    952[0m [43m                        [49m[43mpass_fds[49m[43m,[49m[43m [49m[43mcwd[49m[43m,[49m[43m [49m[43menv[49m[43m,[49m
[1;32m    953[0m [43m                        [49m[43mstartupinfo[49m[43m,[49m[43m [49m[43mcreationflags[49m[43m,[49m[43m [49m[43mshell[49m[43m,[49m
[1;32m    954[0m [43m                        [49m[43mp2cread[49m[43m,[49m[43m [49m[43mp2cwrite[49m[43m,[49m
[1;32m    955[0m [43m                        [49m[43mc2pread[49m[43m,[49m[43m [49m[43mc2pwrite[49m[43m,[49m
[1;32m    956[0m [43m                        [49m[43merrread[49m[43m,[49m[43m [49m[43merrwrite[49m[43m,[49m
[1;32m    957[0m [43m                        [49m[43mrestore_signals[49m[43m,[49m
[1;32m    958[0m [43m                        [49m[43mgid[49m[43m,[49m[43m [49m[43mgids[49m[43m,[49m[43m [49m[43muid[49m[43m,[49m[43m [49m[43mumask[49m[43m,[49m
[1;32m    959[0m [43m                        [49m[43mstart_new_session[49m[43m)[49m
[1;32m    960[0m [38;5;28;01mexcept[39;00m:
[1;32m    961[0m     [38;5;66;03m# Cleanup if the child failed starting.[39;00m

File [0;32m~/opt/anaconda3/envs/py39/lib/python3.9/subprocess.py:1821[0m, in [0;36mPopen._execute_child[0;34m(self, args, executable, preexec_fn, close_fds, pass_fds, cwd, env, startupinfo, creationflags, shell, p2cread, p2cwrite, c2pread, c2pwrite, errread, errwrite, restore_signals, gid, gids, uid, umask, start_new_session)[0m
[1;32m   1820[0m         err_msg [38;5;241m=[39m os[38;5;241m.[39mstrerror(errno_num)
[0;32m-> 1821[0m     [38;5;28;01mraise[39;00m child_exception_type(errno_num, err_msg, err_filename)
[1;32m   1822[0m [38;5;28;01mraise[39;00m child_exception_type(err_msg)

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: './chromedriver'

During handling of the above exception, another exception occurred:

[0;31mWebDriverException[0m                        Traceback (most recent call last)
Input [0;32mIn [1][0m, in [0;36m<cell line: 18>[0;34m()[0m
[1;32m     12[0m [38;5;28;01mfrom[39;00m [38;5;21;01mdateutil[39;00m[38;5;21;01m.[39;00m[38;5;21;01mparser[39;00m [38;5;28;01mimport[39;00m parse
[1;32m     14[0m [38;5;66;03m# driver_path = 'C:/Program Files (x86)/Google/Chrome/Application/chromedriver.exe' #for windows[39;00m
[1;32m     15[0m [38;5;66;03m# driver = webdriver.Chrome(executable_path=driver_path)[39;00m
[1;32m     16[0m 
[1;32m     17[0m [38;5;66;03m# set up webdriver by short path[39;00m
[0;32m---> 18[0m driver [38;5;241m=[39m [43mwebdriver[49m[38;5;241;43m.[39;49m[43mChrome[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43m./chromedriver[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m     20[0m [38;5;66;03m# choose sessionyears[39;00m
[1;32m     21[0m input_sessionyears [38;5;241m=[39m [[38;5;124m'[39m[38;5;124m2021-2022[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m2019-2020[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m2017-2018[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m2015-2016[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m2013-2014[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m2011-2012[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m2009-2010[39m[38;5;124m'[39m,
[1;32m     22[0m                       [38;5;124m'[39m[38;5;124m2007-2008[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m2005-2006[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m2003-2004[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m2001-2002[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m1999-2000[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m1997-1998[39m[38;5;124m'[39m]

File [0;32m~/opt/anaconda3/envs/py39/lib/python3.9/site-packages/selenium/webdriver/chrome/webdriver.py:73[0m, in [0;36mWebDriver.__init__[0;34m(self, executable_path, port, options, service_args, desired_capabilities, service_log_path, chrome_options, keep_alive)[0m
[1;32m     66[0m         desired_capabilities[38;5;241m.[39mupdate(options[38;5;241m.[39mto_capabilities())
[1;32m     68[0m [38;5;28mself[39m[38;5;241m.[39mservice [38;5;241m=[39m Service(
[1;32m     69[0m     executable_path,
[1;32m     70[0m     port[38;5;241m=[39mport,
[1;32m     71[0m     service_args[38;5;241m=[39mservice_args,
[1;32m     72[0m     log_path[38;5;241m=[39mservice_log_path)
[0;32m---> 73[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mservice[49m[38;5;241;43m.[39;49m[43mstart[49m[43m([49m[43m)[49m
[1;32m     75[0m [38;5;28;01mtry[39;00m:
[1;32m     76[0m     RemoteWebDriver[38;5;241m.[39m[38;5;21m__init__[39m(
[1;32m     77[0m         [38;5;28mself[39m,
[1;32m     78[0m         command_executor[38;5;241m=[39mChromeRemoteConnection(
[1;32m     79[0m             remote_server_addr[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mservice[38;5;241m.[39mservice_url,
[1;32m     80[0m             keep_alive[38;5;241m=[39mkeep_alive),
[1;32m     81[0m         desired_capabilities[38;5;241m=[39mdesired_capabilities)

File [0;32m~/opt/anaconda3/envs/py39/lib/python3.9/site-packages/selenium/webdriver/common/service.py:81[0m, in [0;36mService.start[0;34m(self)[0m
[1;32m     79[0m [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m [38;5;28;01mas[39;00m err:
[1;32m     80[0m     [38;5;28;01mif[39;00m err[38;5;241m.[39merrno [38;5;241m==[39m errno[38;5;241m.[39mENOENT:
[0;32m---> 81[0m         [38;5;28;01mraise[39;00m WebDriverException(
[1;32m     82[0m             [38;5;124m"[39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m executable needs to be in PATH. [39m[38;5;132;01m%s[39;00m[38;5;124m"[39m [38;5;241m%[39m (
[1;32m     83[0m                 os[38;5;241m.[39mpath[38;5;241m.[39mbasename([38;5;28mself[39m[38;5;241m.[39mpath), [38;5;28mself[39m[38;5;241m.[39mstart_error_message)
[1;32m     84[0m         )
[1;32m     85[0m     [38;5;28;01melif[39;00m err[38;5;241m.[39merrno [38;5;241m==[39m errno[38;5;241m.[39mEACCES:
[1;32m     86[0m         [38;5;28;01mraise[39;00m WebDriverException(
[1;32m     87[0m             [38;5;124m"[39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m executable may have wrong permissions. [39m[38;5;132;01m%s[39;00m[38;5;124m"[39m [38;5;241m%[39m (
[1;32m     88[0m                 os[38;5;241m.[39mpath[38;5;241m.[39mbasename([38;5;28mself[39m[38;5;241m.[39mpath), [38;5;28mself[39m[38;5;241m.[39mstart_error_message)
[1;32m     89[0m         )

[0;31mWebDriverException[0m: Message: 'chromedriver' executable needs to be in PATH. Please see https://sites.google.com/a/chromium.org/chromedriver/home

WebDriverException: Message: 'chromedriver' executable needs to be in PATH. Please see https://sites.google.com/a/chromium.org/chromedriver/home


